buildscript {
    ext {
        springBootVersion = '1.4.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

subprojects {
    plugins.withType(JavaPlugin).whenPluginAdded {
        configure(project) {
            apply plugin: 'idea'
            apply plugin: 'spring-boot'

            version = '0.0.1-SNAPSHOT'

            def langLevel = 1.8
            sourceCompatibility = langLevel
            targetCompatibility = langLevel

            dependencies {
                compile('org.projectlombok:lombok')
                compile('org.springframework.boot:spring-boot-starter-web')

                testCompile('org.springframework.boot:spring-boot-starter-test')
                testCompile 'org.codehaus.groovy:groovy-all:2.2.1'

            }
            repositories {
                mavenCentral()
            }
            task copyForDocker(type: Copy) {
                from("${buildDir}/libs") {
                    rename { "${project.name}.jar" }
                }
                into "$buildDir"
                include "${jar.archiveName}"

            }

            build.finalizedBy(copyForDocker)
        }

        //for the debug purposes. Run as: gradle debug run
        task debug {
            doLast {
                bootRun {
                    jvmArgs '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005'
                }
            }
        }
    }

}

/*task runDocker(type: Exec) {
   *//* workingDir './'
    environment.put("CONFIG_SERVICE_PASSWORD",123)
    commandLine 'docker-compose -f docker-compose.yml -f docker-compose.dev.yml up -d'
    standardOutput = System.out
*//*
    commandLine 'sh ./dev_start.sh'
}*/
//runDocker.dependsOn
